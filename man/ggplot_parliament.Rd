% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggplot_parliament.R
\name{ggplot_parliament}
\alias{ggplot_parliament}
\title{Create a Parliament Diagram}
\usage{
ggplot_parliament(parties, members, party_colors = NA, border_color = NA,
  text_total = TRUE, autosort = FALSE, rad_inner = 1.5, rad_outer = 3,
  circle_n = 360)
}
\arguments{
\item{parties}{A vector of parties that make up the diagram}

\item{members}{A vector of the parties' member count}

\item{party_colors}{A vector of colors mapped to each party}

\item{border_color}{Border color of the individual circles. Defaults to NA}

\item{text_total}{Boolean indicator for whether to display the total number of members inside the diagram. Defaults to TRUE}

\item{autosort}{Sort the parties from most to least members. Defaults to FALSE}

\item{rad_inner}{Limiting inner radius of the diagram. Defaults to 1.5}

\item{rad_outer}{Limiting outer radius of the diagram. Defaults to 3}

\item{circle_n}{Number of points used to draw circle polygons for each member. Defaults to 360}
}
\description{
Draws a parliament diagram based on parties' member counts, names and colors, 
where each point in the arc represents a single member of parliament. 
Parties are plotted left to right in the order of the input vector, 
unless `autosort` is set to `TRUE`, in which case they are sorted from most to least members.
}
\examples{
# Generate Data
bt <- data.frame(
        parties = c("CDU", "CSU", "SPD", "AfD", "FDP", "Linke", "Gruene", "Fraktionslos"),
        seats   = c(200, 46, 153, 92, 80, 69, 67, 2),
        colors  = c("black", "blue", "red", "lightblue", "yellow","purple", "green", "grey"),
        stringsAsFactors = FALSE)
ggplot_parliament(bt$parties, bt$seats, bt$colors)
}
